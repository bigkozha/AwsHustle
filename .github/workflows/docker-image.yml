name: Docker Image CI

on:
#  push:
#    branches: [ "master" ]
  workflow_dispatch:

  
jobs:

  build:

    name: Build Image
    runs-on: ubuntu-latest
    environment: dev
    env:
      ECS_PATH: 'ecs'
      MAIN_IMAGE_LINK: ${{ secrets.MAIN_IMAGE_LINK }}

    steps:
    - name: Build the Docker image
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to AWS ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1


    - name: Build tag push to AWS ECR
      env: 
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: hustle
        IMAGE_TAG: latest
      run: |
        docker build ./Weather.API/ --file Dockerfile --tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16.x'
    - run: npm install
      working-directory: ${{ env.ECS_PATH }}
      
    - run: npm run build --if-present
      working-directory: ${{ env.ECS_PATH }}
      
    - run: npm test
      working-directory: ${{ env.ECS_PATH }}
      
    - name: Install CDK
      run: |
        sudo npm install -g aws-cdk
        cdk --version
      working-directory: ${{ env.ECS_PATH }}
      
    - run: ls
    - name: CDK run
      run: |
        npm install
        cdk synth
      working-directory: ${{ env.ECS_PATH }}
      
    - run: cdk deploy --require-approval never
      working-directory: ${{ env.ECS_PATH }}      